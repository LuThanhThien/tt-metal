name: "[post-commit] Build C++ binaries with all configs"

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-lib:
    strategy:
      matrix:
        build: [
          {type: Debug, runs-on: ubuntu-20.04},
          {type: RelWithDebInfo, runs-on: build}
        ]
        arch: [grayskull, wormhole_b0, blackhole]
        os: [ubuntu-20.04]
    env:
      ARCH_NAME: ${{ matrix.arch }}
      # So we can get all the makefile output we want
      VERBOSE: 1
    runs-on: ${{ matrix.build.runs-on }}
    name: cmake build ${{ matrix.build.type }} ${{ matrix.arch }}
    steps:
      - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      - name: Install dependencies
        if: ${{ matrix.build.runs-on == 'ubuntu-20.04' }}
        uses: ./.github/actions/install-metal-deps
        with:
          os: ${{ matrix.os }}
      - name: Install dev dependencies
        if: ${{ matrix.build.runs-on == 'ubuntu-20.04' }}
        uses: ./.github/actions/install-metal-dev-deps
        with:
          os: ${{ matrix.os }}
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - name: Build tt-metal libraries
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build.type }} -G Ninja
          cmake --build build
      - name: Build tt-metal C++ tests
        run: |
          cmake --build build --target tests
      - uses: ./.github/actions/slack-report
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U0593J2RQRZ # Bill Teng
